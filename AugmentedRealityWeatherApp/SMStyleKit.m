//
//  SMStyleKit.m
//  AugmentedRealityWeatherApp
//
//  Created by Shaun Merritt on 9/24/14.
//  Copyright (c) 2014 Shaun Merritt. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "SMStyleKit.h"


@implementation SMStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods



+ (UIBezierPath *)drawLocationIcon;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(28.9, 13.1)];
    [bezierPath addCurveToPoint: CGPointMake(17.76, 33.03) controlPoint1: CGPointMake(24.72, 18.99) controlPoint2: CGPointMake(19.75, 25.02)];
    [bezierPath addCurveToPoint: CGPointMake(17.76, 44.25) controlPoint1: CGPointMake(17.54, 39.44) controlPoint2: CGPointMake(16.65, 40.88)];
    [bezierPath addCurveToPoint: CGPointMake(61.08, 119.02) controlPoint1: CGPointMake(17.07, 60.94) controlPoint2: CGPointMake(46.99, 122.56)];
    [bezierPath addCurveToPoint: CGPointMake(99.44, 52.97) controlPoint1: CGPointMake(73.3, 115.94) controlPoint2: CGPointMake(94.96, 66.53)];
    [bezierPath addCurveToPoint: CGPointMake(99.44, 40.51) controlPoint1: CGPointMake(99.54, 45.76) controlPoint2: CGPointMake(100.65, 44.15)];
    [bezierPath addCurveToPoint: CGPointMake(68.5, 1.88) controlPoint1: CGPointMake(98.89, 19.99) controlPoint2: CGPointMake(85.24, 6.09)];
    [bezierPath addCurveToPoint: CGPointMake(28.9, 13.1) controlPoint1: CGPointMake(45.29, -1.86) controlPoint2: CGPointMake(40.72, 7.14)];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(48.7, 33.03)];
    [bezierPath addCurveToPoint: CGPointMake(44.99, 38.02) controlPoint1: CGPointMake(48.03, 34.97) controlPoint2: CGPointMake(45.81, 36.38)];
    [bezierPath addCurveToPoint: CGPointMake(53.65, 56.71) controlPoint1: CGPointMake(44.49, 48.17) controlPoint2: CGPointMake(47.51, 53.62)];
    [bezierPath addCurveToPoint: CGPointMake(72.22, 47.99) controlPoint1: CGPointMake(63.73, 57.21) controlPoint2: CGPointMake(69.15, 54.17)];
    [bezierPath addCurveToPoint: CGPointMake(63.55, 29.29) controlPoint1: CGPointMake(72.72, 37.84) controlPoint2: CGPointMake(69.69, 32.39)];
    [bezierPath addCurveToPoint: CGPointMake(48.7, 33.03) controlPoint1: CGPointMake(53.36, 27.72) controlPoint2: CGPointMake(53.52, 30.61)];
    [bezierPath closePath];
    bezierPath.miterLimit = 4;

    return bezierPath;
}

+ (NSArray *)drawiPhone {
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0.257 green: 0.257 blue: 0.257 alpha: 1];
    UIColor* color1 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    
    NSMutableArray *arrrrray;
    arrrrray = [[NSMutableArray alloc] init];
    //// Page-1
    {
        //// Portrait
        {
            //// iPhone-+-Find-Phone- 2
            {
                //// iPhone
                {
                    //// Rectangle-26 Drawing
                    UIBezierPath* rectangle26Path = UIBezierPath.bezierPath;
                    [rectangle26Path moveToPoint: CGPointMake(29.7, 59.55)];
                    [rectangle26Path addLineToPoint: CGPointMake(175.45, 59.55)];
                    [rectangle26Path addCurveToPoint: CGPointMake(183.95, 60.2) controlPoint1: CGPointMake(179.81, 59.55) controlPoint2: CGPointMake(181.98, 59.55)];
                    [rectangle26Path addLineToPoint: CGPointMake(184.33, 60.3)];
                    [rectangle26Path addCurveToPoint: CGPointMake(189.83, 65.8) controlPoint1: CGPointMake(186.89, 61.23) controlPoint2: CGPointMake(188.9, 63.24)];
                    [rectangle26Path addCurveToPoint: CGPointMake(190.57, 74.67) controlPoint1: CGPointMake(190.57, 68.14) controlPoint2: CGPointMake(190.57, 70.32)];
                    [rectangle26Path addLineToPoint: CGPointMake(190.57, 324.44)];
                    [rectangle26Path addCurveToPoint: CGPointMake(189.93, 332.93) controlPoint1: CGPointMake(190.57, 328.79) controlPoint2: CGPointMake(190.57, 330.97)];
                    [rectangle26Path addLineToPoint: CGPointMake(189.83, 333.31)];
                    [rectangle26Path addCurveToPoint: CGPointMake(184.33, 338.81) controlPoint1: CGPointMake(188.9, 335.87) controlPoint2: CGPointMake(186.89, 337.88)];
                    [rectangle26Path addCurveToPoint: CGPointMake(175.45, 339.55) controlPoint1: CGPointMake(181.98, 339.55) controlPoint2: CGPointMake(179.81, 339.55)];
                    [rectangle26Path addLineToPoint: CGPointMake(29.7, 339.55)];
                    [rectangle26Path addCurveToPoint: CGPointMake(21.2, 338.91) controlPoint1: CGPointMake(25.34, 339.55) controlPoint2: CGPointMake(23.17, 339.55)];
                    [rectangle26Path addLineToPoint: CGPointMake(20.82, 338.81)];
                    [rectangle26Path addCurveToPoint: CGPointMake(15.32, 333.31) controlPoint1: CGPointMake(18.26, 337.88) controlPoint2: CGPointMake(16.25, 335.87)];
                    [rectangle26Path addCurveToPoint: CGPointMake(14.57, 324.44) controlPoint1: CGPointMake(14.57, 330.97) controlPoint2: CGPointMake(14.57, 328.79)];
                    [rectangle26Path addLineToPoint: CGPointMake(14.57, 74.67)];
                    [rectangle26Path addCurveToPoint: CGPointMake(15.22, 66.18) controlPoint1: CGPointMake(14.57, 70.32) controlPoint2: CGPointMake(14.57, 68.14)];
                    [rectangle26Path addLineToPoint: CGPointMake(15.32, 65.8)];
                    [rectangle26Path addCurveToPoint: CGPointMake(20.82, 60.3) controlPoint1: CGPointMake(16.25, 63.24) controlPoint2: CGPointMake(18.26, 61.23)];
                    [rectangle26Path addCurveToPoint: CGPointMake(29.7, 59.55) controlPoint1: CGPointMake(23.17, 59.55) controlPoint2: CGPointMake(25.34, 59.55)];
                    [rectangle26Path closePath];
                    
                    
                    
                    [arrrrray addObject:rectangle26Path];
                    
                    //// Rectangle-28 Drawing
                    //// Rectangle-28 Drawing
                    UIBezierPath* rectangle28Path = UIBezierPath.bezierPath;
                    [rectangle28Path moveToPoint: CGPointMake(40.05, 91.3)];
                    [rectangle28Path addLineToPoint: CGPointMake(165.1, 91.3)];
                    [rectangle28Path addCurveToPoint: CGPointMake(171.8, 91.81) controlPoint1: CGPointMake(168.53, 91.3) controlPoint2: CGPointMake(170.25, 91.3)];
                    [rectangle28Path addLineToPoint: CGPointMake(172.1, 91.89)];
                    [rectangle28Path addCurveToPoint: CGPointMake(176.45, 96.23) controlPoint1: CGPointMake(174.12, 92.62) controlPoint2: CGPointMake(175.72, 94.21)];
                    [rectangle28Path addCurveToPoint: CGPointMake(177.04, 103.24) controlPoint1: CGPointMake(177.04, 98.08) controlPoint2: CGPointMake(177.04, 99.8)];
                    [rectangle28Path addLineToPoint: CGPointMake(177.04, 273.49)];
                    [rectangle28Path addCurveToPoint: CGPointMake(176.52, 280.2) controlPoint1: CGPointMake(177.04, 276.93) controlPoint2: CGPointMake(177.04, 278.65)];
                    [rectangle28Path addLineToPoint: CGPointMake(176.45, 280.5)];
                    [rectangle28Path addCurveToPoint: CGPointMake(172.1, 284.84) controlPoint1: CGPointMake(175.72, 282.52) controlPoint2: CGPointMake(174.12, 284.11)];
                    [rectangle28Path addCurveToPoint: CGPointMake(165.1, 285.43) controlPoint1: CGPointMake(170.25, 285.43) controlPoint2: CGPointMake(168.53, 285.43)];
                    [rectangle28Path addLineToPoint: CGPointMake(40.05, 285.43)];
                    [rectangle28Path addCurveToPoint: CGPointMake(33.35, 284.92) controlPoint1: CGPointMake(36.61, 285.43) controlPoint2: CGPointMake(34.9, 285.43)];
                    [rectangle28Path addLineToPoint: CGPointMake(33.05, 284.84)];
                    [rectangle28Path addCurveToPoint: CGPointMake(28.7, 280.5) controlPoint1: CGPointMake(31.02, 284.11) controlPoint2: CGPointMake(29.43, 282.52)];
                    [rectangle28Path addCurveToPoint: CGPointMake(28.11, 273.49) controlPoint1: CGPointMake(28.11, 278.65) controlPoint2: CGPointMake(28.11, 276.93)];
                    [rectangle28Path addLineToPoint: CGPointMake(28.11, 103.24)];
                    [rectangle28Path addCurveToPoint: CGPointMake(28.62, 96.53) controlPoint1: CGPointMake(28.11, 99.8) controlPoint2: CGPointMake(28.11, 98.08)];
                    [rectangle28Path addLineToPoint: CGPointMake(28.7, 96.23)];
                    [rectangle28Path addCurveToPoint: CGPointMake(33.05, 91.89) controlPoint1: CGPointMake(29.43, 94.21) controlPoint2: CGPointMake(31.02, 92.62)];
                    [rectangle28Path addCurveToPoint: CGPointMake(40.05, 91.3) controlPoint1: CGPointMake(34.9, 91.3) controlPoint2: CGPointMake(36.61, 91.3)];
                    [rectangle28Path closePath];
                    
                    
                    [arrrrray addObject:rectangle28Path];
                    
                    
                    //// Line Drawing
                    UIBezierPath* linePath = UIBezierPath.bezierPath;
                    [linePath moveToPoint: CGPointMake(78.36, 80.89)];
                    [linePath addCurveToPoint: CGPointMake(126.79, 80.89) controlPoint1: CGPointMake(78.1, 80.37) controlPoint2: CGPointMake(126.79, 80.89)];
                    linePath.miterLimit = 4;
                    
                    linePath.lineCapStyle = kCGLineCapSquare;
                    
                    linePath.usesEvenOddFillRule = YES;
                    [arrrrray addObject:linePath];
                    
                    
                    //// Oval-5 Drawing
                    UIBezierPath* oval5Path = UIBezierPath.bezierPath;
                    [oval5Path moveToPoint: CGPointMake(121.84, 312.75)];
                    [oval5Path addCurveToPoint: CGPointMake(102.31, 293.23) controlPoint1: CGPointMake(121.84, 301.97) controlPoint2: CGPointMake(113.1, 293.23)];
                    [oval5Path addCurveToPoint: CGPointMake(82.79, 312.75) controlPoint1: CGPointMake(91.53, 293.23) controlPoint2: CGPointMake(82.79, 301.97)];
                    [oval5Path addCurveToPoint: CGPointMake(102.31, 332.27) controlPoint1: CGPointMake(82.79, 323.53) controlPoint2: CGPointMake(91.53, 332.27)];
                    [oval5Path addCurveToPoint: CGPointMake(121.84, 312.75) controlPoint1: CGPointMake(113.1, 332.27) controlPoint2: CGPointMake(121.84, 323.53)];
                    [oval5Path closePath];
                    
                    [arrrrray addObject:oval5Path];
                    
                    
                    //// Rectangle- Drawing
                    UIBezierPath* rectanglePath = UIBezierPath.bezierPath;
                    [rectanglePath moveToPoint: CGPointMake(102.31, 301.56)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 301.56)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 301.56)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 301.56)];
                    [rectanglePath addCurveToPoint: CGPointMake(113.51, 312.75) controlPoint1: CGPointMake(108.5, 301.56) controlPoint2: CGPointMake(113.51, 306.57)];
                    [rectanglePath addLineToPoint: CGPointMake(113.51, 312.75)];
                    [rectanglePath addLineToPoint: CGPointMake(113.51, 312.75)];
                    [rectanglePath addLineToPoint: CGPointMake(113.51, 312.75)];
                    [rectanglePath addLineToPoint: CGPointMake(113.51, 312.75)];
                    [rectanglePath addLineToPoint: CGPointMake(113.51, 312.75)];
                    [rectanglePath addCurveToPoint: CGPointMake(102.31, 323.94) controlPoint1: CGPointMake(113.51, 318.93) controlPoint2: CGPointMake(108.5, 323.94)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 323.94)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 323.94)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 323.94)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 323.94)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 323.94)];
                    [rectanglePath addCurveToPoint: CGPointMake(91.12, 312.75) controlPoint1: CGPointMake(96.13, 323.94) controlPoint2: CGPointMake(91.12, 318.93)];
                    [rectanglePath addLineToPoint: CGPointMake(91.12, 312.75)];
                    [rectanglePath addLineToPoint: CGPointMake(91.12, 312.75)];
                    [rectanglePath addLineToPoint: CGPointMake(91.12, 312.75)];
                    [rectanglePath addLineToPoint: CGPointMake(91.12, 312.75)];
                    [rectanglePath addLineToPoint: CGPointMake(91.12, 312.75)];
                    [rectanglePath addCurveToPoint: CGPointMake(102.31, 301.56) controlPoint1: CGPointMake(91.12, 306.57) controlPoint2: CGPointMake(96.13, 301.56)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 301.56)];
                    [rectanglePath addLineToPoint: CGPointMake(102.31, 301.56)];
                    [rectanglePath closePath];

                    
                    [arrrrray addObject:rectanglePath];
                    
                    NSArray *array = arrrrray;
                    return array;
                }
            }
        }
    }

}

+(UIBezierPath *)drawCloud {

    //// Color Declarations
    UIColor* color1 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    
    //// Page-1
    {
        //// Portrait
        {
            //// Oval-6 Drawing
            UIBezierPath* oval6Path = UIBezierPath.bezierPath;
            [oval6Path moveToPoint: CGPointMake(33.28, 87.67)];
            [oval6Path addCurveToPoint: CGPointMake(0.27, 44.84) controlPoint1: CGPointMake(14.24, 82.4) controlPoint2: CGPointMake(0.27, 65.22)];
            [oval6Path addCurveToPoint: CGPointMake(45.61, 0.34) controlPoint1: CGPointMake(0.27, 20.26) controlPoint2: CGPointMake(20.57, 0.34)];
            [oval6Path addCurveToPoint: CGPointMake(84.52, 21.99) controlPoint1: CGPointMake(62.14, 0.34) controlPoint2: CGPointMake(76.6, 9.02)];
            [oval6Path addCurveToPoint: CGPointMake(100.21, 18.54) controlPoint1: CGPointMake(90.66, 19.82) controlPoint2: CGPointMake(96.14, 18.54)];
            [oval6Path addCurveToPoint: CGPointMake(136.27, 53.94) controlPoint1: CGPointMake(120.13, 18.54) controlPoint2: CGPointMake(136.27, 34.39)];
            [oval6Path addCurveToPoint: CGPointMake(111.12, 87.69) controlPoint1: CGPointMake(136.27, 69.75) controlPoint2: CGPointMake(125.71, 83.15)];
            [oval6Path addCurveToPoint: CGPointMake(106.2, 88.97) controlPoint1: CGPointMake(109.97, 88.19) controlPoint2: CGPointMake(108.36, 88.63)];
            [oval6Path addCurveToPoint: CGPointMake(38.2, 88.97) controlPoint1: CGPointMake(89.47, 91.63) controlPoint2: CGPointMake(55.17, 91.76)];
            [oval6Path addCurveToPoint: CGPointMake(33.28, 87.67) controlPoint1: CGPointMake(36.05, 88.62) controlPoint2: CGPointMake(34.45, 88.18)];
            [oval6Path closePath];
            oval6Path.miterLimit = 4;

            
            return oval6Path;
//            
//            oval6Path.usesEvenOddFillRule = YES;
//            
//            [color1 setFill];
//            [oval6Path fill];
//            [color1 setStroke];
//            oval6Path.lineWidth = 5;
//            [oval6Path stroke];
        }
    }
}

+(UIBezierPath *)drawRect {
    //// Bezier Drawing
    UIBezierPath* someBigRectangle = UIBezierPath.bezierPath;
    [someBigRectangle moveToPoint: CGPointMake(3.5, 3.5)];
    [someBigRectangle addCurveToPoint: CGPointMake(983.5, 3.5) controlPoint1: CGPointMake(980.54, 3.5) controlPoint2: CGPointMake(983.5, 3.5)];
    [someBigRectangle addLineToPoint: CGPointMake(983.5, 1998.5)];
    [someBigRectangle addLineToPoint: CGPointMake(3.5, 1998.5)];
    [someBigRectangle addLineToPoint: CGPointMake(3.5, 3.5)];
    [someBigRectangle addLineToPoint: CGPointMake(3.5, 3.5)];
    [someBigRectangle closePath];
    return someBigRectangle;
}


@end
